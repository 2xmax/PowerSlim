This page executes the Suite tests via !-FitNesse's RESTful-! services. This is done to test for expected exceptions on the tests, which can't be tested directly from a test table because the expected result is in fact an exception.

Note: The test pages themselves are disabled in the suite, which makes sure they don't run individually when the suite is run but are instead executed from this page only. To understand how the tests below actually work, the test pages can actually be run by themselves so one can see the exceptions that they produce.

!*****> Define variables and scenariofor the RESTful service invocation
!define Server     {localhost}
!define Responder  {test}
!define Inputs     {format=xml}

| scenario | To prove test page continues after normal exceptions _ | TESTPAGE, EXCEPTION_TEXT, PROOF_TESTS_CONTINUED |
| $URI= | eval | '${Server}/@TESTPAGE?responder=${Responder}&${Inputs}'       |
|         eval | $results = Invoke-RestMethod -Uri '$URI'                     |
| check | eval | $results.testResults.result.content.indexOf( '@EXCEPTION_TEXT' ) -ge 0        | True |
| check | eval | $results.testResults.result.content.indexOf( '@PROOF_TESTS_CONTINUED' ) -ge 0 | True |

| scenario | To prove test page aborted after failure _ | TESTPAGE, FIRST_EXCEPTION, NEXT_EXCEPTION, PROOF_TESTING_STOPPED |
| $URI= | eval | '${Server}/@TESTPAGE?responder=${Responder}&${Inputs}'       |
|         eval | $results = Invoke-RestMethod -Uri '$URI'                     |
| check | eval | $results.testResults.result.content.indexOf( '@FIRST_EXCEPTION' ) -ge 0       | True |
| check | eval | $results.testResults.result.content.indexOf( '@NEXT_EXCEPTION' ) -ge 0        | True |
| check | eval | $results.testResults.result.content.indexOf( '@PROOF_TESTING_STOPPED' ) -ge 0 | True |
******!
The following tests show how normal exceptions are now handled. The error details are returned to !-FitNesse-! and displayed as an exception - neither a success or failure - and testing continues.

!| To prove test page continues after normal exceptions | 
| TESTPAGE                                                         | EXCEPTION_TEXT                                              | PROOF_TESTS_CONTINUED |
| PowerSlim.OriginalMode.SuiteExceptions.CommandNotFoundException  | __EXCEPTION__:COMMAND_NOT_FOUND:                            | /\d{4}-\d{2}-\d{2}/   |
| PowerSlim.OriginalMode.SuiteExceptions.RunTimeException          | __EXCEPTION__:RuntimeException:Attempted to divide by zero. | /\d{4}-\d{2}-\d{2}/   |

Next, test that aborting works correctly. When a test aborts, it should not run any more tests in the table in which it encountered an error, and !-FitNesse-! should recognize the abort and then not run any more tests that follow.

To abort a test the developer can issue a {{{ throw "StopTest" }}} or {{{ throw "StopTest:Some additional error info" }}} This is useful when certain critical errors have occurred, such as failing to connect to a test database or some other problem.

!| To prove test page aborted after failure |
| TESTPAGE                                                                    | FIRST_EXCEPTION                                                                                                       | NEXT_EXCEPTION                                                                        | PROOF_TESTING_STOPPED                                  |
| PowerSlim.OriginalMode.SuiteExceptions.AbortExceptionStopTest               | <span class="fail">__EXCEPTION__:ABORT_SLIM_TEST:Testing aborted.</span>                                              | <span class="fail">ABORT_INDICATED:Test not run</span>                                | <span class="ignore">Test not run</span>               |
| PowerSlim.OriginalMode.SuiteExceptions.AbortExceptionStopTestAdditionalInfo | <span class="fail">__EXCEPTION__:ABORT_SLIM_TEST:Testing aborted. Additional Info[Something terrible happened]</span> | <span class="fail">ABORT_INDICATED:Test not run</span>                                | <span class="ignore">Test not run</span>               |
| PowerSlim.OriginalMode.SuiteExceptions.AbortExceptionErrorActionPreference  | <span class="error">__EXCEPTION__:RuntimeException:Attempted to divide by zero.</span>                                | <span class="fail">__EXCEPTION__:RuntimeException:Attempted to divide by zero.</span> | <span class="fail">ABORT_INDICATED:Test not run</span> |

